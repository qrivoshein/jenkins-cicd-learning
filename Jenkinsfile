pipeline {
    agent any

    stages {
        stage('Check Structure') {
            steps {
                echo 'Checking project structure...'
                sh 'ls -la app/'
            }
        }
        
        stage('Build Docker') {
            steps {
                echo 'Building Docker image from app folder...'
                dir('app') {
                    sh 'docker build -t test-app .'
                }
            }
        }
        
        // ‚Üì‚Üì‚Üì –î–û–ë–ê–í–¨ –≠–¢–û–¢ STAGE –ó–î–ï–°–¨ ‚Üì‚Üì‚Üì
        stage('Setup Frontend') {
            steps {
                echo 'Setting up frontend...'
                sh '''
                    # –ö–æ–ø–∏—Ä—É–µ–º –ø–∞–ø–∫—É public –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä app
                    docker cp ./public demo-app:/app/
                    echo "Frontend files copied to container"
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª–æ—Å—å
                    docker exec demo-app ls -la /app/public/
                '''
            }
        }
        // ‚Üë‚Üë‚Üë –î–û–ë–ê–í–¨ –≠–¢–û–¢ STAGE –ó–î–ï–°–¨ ‚Üë‚Üë‚Üë
        
        stage('Test') {
            steps {
                echo 'Checking if app starts...'
                sh '''
                    docker run -d --name test-container test-app
                    sleep 3
                    docker ps | grep test-container && echo "Container is running!" || echo "Container failed to start"
                    docker logs test-container
                    docker stop test-container
                    docker rm test-container
                '''
            }
        }
        
        stage('Deploy Demo') {
            steps {
                echo 'Deploying to test environment...'
                sh '''
                    docker run -d --name demo-app -p 8081:3000 test-app
                    echo "Application deployed at: http://localhost:8081"
                    echo "Check running containers:"
                    docker ps
                '''
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline completed!'
            sh 'docker system prune -f'
        }
        success {
            echo 'üéâ SUCCESS! CI/CD pipeline is working!'
            sh '''
                echo "Demo app is running at: http://localhost:8081"
                echo "To stop: docker stop demo-app"
            '''
        }
    }
}
